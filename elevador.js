"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const blockpos_1 = require("bdsx/bds/blockpos");
const event_1 = require("bdsx/event");
const launcher_1 = require("bdsx/launcher");
var Type;
(function (Type) {
    Type[Type["up"] = 0] = "up";
    Type[Type["down"] = 1] = "down";
})(Type || (Type = {}));
event_1.events.playerJump.on(ev => {
    const region = ev.player.getRegion();
    const pos = ev.player.getPosition();
    const posCrying = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y) - 2, Math.floor(pos.z));
    const posFrame = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y) - 1, Math.floor(pos.z));
    const Crying = region.getBlock(posCrying);
    const Frame = region.getBlock(posFrame);
    if (ev.player.isPlayer()) {
        if (Crying.getName() == "minecraft:crying_obsidian") {
            if (Frame.getName() == "minecraft:frame" || Frame.getName() == "minecraft:glow_frame") {
                const frameActor = region.getBlockEntity(posFrame);
                if (frameActor.save().Item.Name != undefined) {
                    if (frameActor.save().Item.Name == "minecraft:amethyst_shard") {
                        //ev.player.sendActionbar("UP!!");
                        getTeleport(ev.player, region, Type.up);
                    }
                }
            }
        }
    }
});
event_1.events.entitySneak.on(ev => {
    const region = ev.entity.getRegion();
    const pos = ev.entity.getPosition();
    const posCrying = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y) - 2, Math.floor(pos.z));
    const posFrame = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y) - 1, Math.floor(pos.z));
    const Crying = region.getBlock(posCrying);
    const Frame = region.getBlock(posFrame);
    if (ev.entity.isPlayer() && ev.isSneaking && !ev.entity.hasTag("elevador_down")) {
        if (Crying.getName() == "minecraft:crying_obsidian") {
            if (Frame.getName() == "minecraft:frame" || Frame.getName() == "minecraft:glow_frame") {
                const frameActor = region.getBlockEntity(posFrame);
                if (frameActor.save().Item.Name != undefined) {
                    if (frameActor.save().Item.Name == "minecraft:amethyst_shard") {
                        //ev.entity.sendActionbar("DOWN!!");
                        ev.entity.setSneaking(false);
                        ev.entity.addTag("elevador_down");
                        setTimeout(function () {
                            ev.entity.removeTag("elevador_down");
                        }, 500);
                        getTeleport(ev.entity, region, Type.down);
                    }
                }
            }
        }
    }
});
async function getTeleport(player, region, type) {
    if (!player.isPlayer()) {
        return;
    }
    const pos = player.getPosition();
    if (type == Type.up) {
        for (let i = Math.floor(pos.y + 3); i < 322; i++) {
            const posCrying = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(i) - 2, Math.floor(pos.z));
            const posFrame = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(i) - 1, Math.floor(pos.z));
            const Crying = region.getBlock(posCrying);
            const Frame = region.getBlock(posFrame);
            if (Crying.getName() == "minecraft:crying_obsidian") {
                if (Frame.getName() == "minecraft:frame" || Frame.getName() == "minecraft:glow_frame") {
                    const frameActor = region.getBlockEntity(posFrame);
                    if (frameActor.save().Item.Name == "minecraft:amethyst_shard") {
                        player.teleport(blockpos_1.Vec3.create(pos.x, Math.floor(i) + 1, pos.z), player.getDimensionId(), player.getFeetPos());
                        for (const _player of launcher_1.bedrockServer.serverInstance.getPlayers()) {
                            if (_player.getDimensionId() == player.getDimensionId()) {
                                _player.playSound("block.composter.empty", { x: Math.floor(pos.x), y: Math.floor(pos.y), z: Math.floor(pos.z) }, 100, 0.5);
                                _player.playSound("block.composter.empty", { x: Math.floor(pos.x), y: Math.floor(i), z: Math.floor(pos.z) }, 100, 0.5);
                            }
                        }
                        break;
                    }
                }
            }
        }
    }
    else if (type == Type.down) {
        for (let i = Math.floor(pos.y - 3); i > -64; i--) {
            const posCrying = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(i) - 2, Math.floor(pos.z));
            const posFrame = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(i) - 1, Math.floor(pos.z));
            const Crying = region.getBlock(posCrying);
            const Frame = region.getBlock(posFrame);
            if (Crying.getName() == "minecraft:crying_obsidian") {
                if (Frame.getName() == "minecraft:frame") {
                    const frameActor = region.getBlockEntity(posFrame);
                    if (frameActor.save().Item.Name == "minecraft:amethyst_shard") {
                        player.teleport(blockpos_1.Vec3.create(pos.x, Math.floor(i) + 1, pos.z), player.getDimensionId(), player.getFeetPos());
                        for (const _player of launcher_1.bedrockServer.serverInstance.getPlayers()) {
                            if (_player.getDimensionId() == player.getDimensionId()) {
                                _player.playSound("block.composter.empty", { x: Math.floor(pos.x), y: Math.floor(pos.y), z: Math.floor(pos.z) }, 100, 0.5);
                                _player.playSound("block.composter.empty", { x: Math.floor(pos.x), y: Math.floor(i), z: Math.floor(pos.z) }, 100, 0.5);
                            }
                        }
                        break;
                    }
                }
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,